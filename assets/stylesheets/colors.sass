@import 'map-plus'

/// Global registry for persistent use
$theme-registry: ("default": generateColorSwatch())

/// Registry operations
@function register-theme($themeAccessor, $swatch)
    @if ($theme-accessor == null)
        @error "Must specify an accessor string as key for registering swatch."
    @if (type-of($swatch) != map)
        @warn "Specified argument is not a color swatch map."

    @debug map-set($theme-registry, $theme-accessor, $swatch)

@function get-theme-element($accessor)
    @if (map-has-key($theme-registry, $accessor))
        @return map-get($theme-registry, $accessor)
    @warn "Could not find the requested theme in registry. Returning the default theme instead."
    @return map-get($theme-registry, "default")

/// Color swatch generator
@function generateColorSwatch($primary: #EEEEEE, $secondary: #191919, $accent: $primary, $alt-accent: $accent, $foreground: $accent, $background: $secondary, $canvas: $background, $highlight: $accent, $shadow: $secondary)
    $primary: map-merge-all( ("hex": $primary), generateAccents($primary) )
    $secondary: map-merge-all( ("hex": $secondary), generateAccents($secondary) )
    $accent: map-merge-all( ("hex": $accent), generateAccents($accent) )
    $alt-accent: map-merge-all( ("hex": $alt-accent), generateAccents($alt-accent) )
    $foreground: map-merge-all( ("hex": $foreground), generateAccents($foreground) )
    $background: map-merge-all( ("hex": $background), generateAccents($background) )
    $canvas: map-merge-all( ("hex": $canvas), generateAccents($canvas) )
    $highlight: map-merge-all( ("hex": $highlight), generateAccents($highlight) )
    $shadow: map-merge-all( ("hex": $shadow), generateAccents($shadow) )

    $primitive-map: ( "primary": $primary, "secondary": $secondary, "accent": $accent, "alt-accent": $alt-accent, "foreground": $foreground, "background": $background, "canvas": $canvas, "highlight": $highlight, "shadow": $shadow)

    @return $primitive-map

@function generateAccents($color)
    @if ($color == null)
        @error "No color was supplied to the function"

    $l-5: lighten($color, 5%)
    $l-10: lighten($color, 10%)
    $l-15: lighten($color, 15%)
    $l-20: lighten($color, 20%)
    $l-25: lighten($color, 25%)
    $l-30: lighten($color, 30%)
    $l-35: lighten($color, 35%)
    $l-40: lighten($color, 40%)
    $l-50: lighten($color, 50%)
    $l-60: lighten($color, 60%)
    $l-70: lighten($color, 70%)
    $l-75: lighten($color, 75%)
    $d-75: darken($color, 75%)
    $d-70: darken($color, 70%)
    $d-60: darken($color, 60%)
    $d-50: darken($color, 50%)
    $d-40: darken($color, 40%)
    $d-35: darken($color, 35%)
    $d-30: darken($color, 30%)
    $d-25: darken($color, 25%)
    $d-20: darken($color, 20%)
    $d-15: darken($color, 15%)
    $d-10: darken($color, 10%)
    $d-5: darken($color, 5%)
    $i: invert($color)

    @return ( "light-5%": ("hex": $l-5), "light-10%": ("hex": $l-10), "light-15%": ("hex": $l-15), "light-20%": ("hex": $l-20), "light-25%": ("hex": $l-25), "light-30%": ("hex": $l-30), "light-35%": ("hex": $l-35), "light-40%": ("hex": $l-40), "light-50%": ("hex": $l-50), "light-60%": ("hex": $l-60), "light-70%": ("hex": $l-70), "light-75%": ("hex": $l-75), "dark-75%": ("hex": $d-75), "dark-70%": ("hex": $d-70), "dark-60%": ("hex": $d-60), "dark-50%": ("hex": $d-50), "dark-40%": ("hex": $d-40), "dark-35%": ("hex": $d-35), "dark-30%": ("hex": $d-30), "dark-25%": ("hex": $d-25), "dark-20%": ("hex": $d-20), "dark-15%": ("hex": $d-15), "dark-10%": ("hex": $d-10), "dark-5%": ("hex": $d-5), "invert": ("hex": $i) )
